*익명 이너 클래스 : 한 번만 사용하는 개체

new super(){
	// 멤버 선언(추상 메서드 오버라이딩)
}

*Exception - 예외 객체 처리
=> Exception과 Exception을 상속받은 객체들로 예외 객체 생성
try & catch & finally=> 예외 객체를 잡았을 때 어떻게 처리할 것인가?
try{
	// 프로그램이 실행할 문장(예외 발생 가능한 문장을 try로 감싼다.)
} catch (발생할 수 있는 예외 타입의 변수 선언) {
	// try에서 예외가 발생할 경우 catch로 넘어 옴
	// 예외가 발생했을 때 수행할 문장 입력
} finally {
	// 무조건 수행할 문장 입력
	// 앞에 리턴문이 있어도 반드시 수행한다.
}
 - try & catch나 try & finally, try & catch & finally의 조합으로 주로 사용


*예외 처리 방법
throws : 메서드 선언부에 명시
접근제어자 제어자 리턴타입 메서드명 (매개변수) throws 예외타입, ...{}
- 메서드 수행 중 예외가 발생하면 호출한 지점으로 예외 객체를 리턴한다.
- 마지막 지점에서는 try - catch로 처리해야 한다.

throws가 명시된 메서드 호출
- 예외 처리하면서 메서드를 호출
- 명시된 예외타입이 RuntimeException인 경우, 혹은 그를 상속받는 예외인 경우 예외 처리를 생략 가능하다.
	=> api 문서에서 클래스명 검색 후 확인

*사용자 정의 예외 클래스 생성
class 이름 extends Exception{
	생성자() {
		super(); // Exception() 호출
	}
}

*예외 발생
throw new 예외클래스(); // 현재 위치에 예외를 발생

*객체의 등가 여부 비교
1. equals() - 두 객체의 인스턴스 주소를 비교, 같으면 true, 다르면 false return
	=> 오버라이딩해서 두 인스턴스가 논리적으로 동일한지 판단할 수 있도록 구성
	=> 어떤 변수이던 받아올 수 있도록 Object 타입의 객체를 받아 온다(타입이 다르면 비교 X).
		instanceof 메서드를 사용하여 우선 두 객체가 변환 가능한지 확인
	- int(수) : 연산자로 비교
	- String(문자열 객체) : equals 메서드로 비교해야 한다.

2. hashCode() - 인스턴스의 주소를 반환
	+ hash : 정보 저장, 검색하는 자료 구조의 종류
			 heap 메모리에 인스턴스가 저장되는 방식이 hash 방식이다.
	=> 오버라이딩하여 변수의 값을 int로 리턴
	=> String 클래스에는 문자열을 int처리하여 int로 반환(같은 문자열은 같은 숫자값을 리턴한다)
	
 ! 두 인스턴스가 같다는 것은?
	두 인스턴스에 대한 equals()의 반환 값이 true이고 동일한 hashCode()값을 반환할 경우 두 인스턴스 객체는 같다.

3. set : 객체들을 모아서 저장하는데, 인스턴스를 비교하여 중복되는 객체는 제외하고 저장

*toString() : 인스턴스에 저장된 값(변수)을 하나의 문자열로 만들어 return
			  ! 패키지.클래스명@hashCode - 16진수로 return될 경우 오버라이딩되지 않았음
			  참조변수 출력 시 toString() 호출
			  참조변수 + String(우선순위 높음!) -> toString()호출
			  => 참조변수와 다른 우선순위의 타입을 연산할 경우 값이 일치해야 한다.
				 참조형 간의 형변환은 상속 관계에 있을 때만 가능하다.
				 모든 객체 안에는 toString()메서드가 존재하므로 타입이 다를 때 자동으로 호출된다.

*문자열을 변경(수정, 추가, 삭제)할 때는 String에 직접 하는 것이 아니라
StringBuilder or StringBuffer를 사용한다.

buffer : 임시저장소

문자열을 받아와 내부에 char[]로 저장
append, insert, delete, replace... 메서드를 이용해 내용을 변경

register
cache

